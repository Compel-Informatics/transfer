{"version":3,"sources":["CoinsNavbar.js","Camera.js","StartPage.js","App.js","reportWebVitals.js","index.js"],"names":["CoinsNavbar","Navbar","bg","expand","Brand","href","Collapse","id","Camera","camera","React","useRef","startVideo","navigator","getUserMedia","video","stream","current","srcObject","err","console","error","useEffect","Promise","all","faceapi","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","faceExpressionNet","then","addEventListener","canvas","document","body","append","displaySize","width","height","setInterval","a","withFaceLandmarks","withFaceExpressions","detections","resizedDetections","log","getContext","clearRect","drawFaceLandmarks","ref","autoPlay","muted","StartPage","useState","show","setShow","setEmail","Modal","Dialog","Header","Title","Body","Input","placeholder","onChange","e","target","value","Button","onClick","className","playing","url","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"qRAkBeA,EAfK,WACpB,OAEA,mCACA,eAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAA1B,UACE,cAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,QAAnB,0CAEA,cAACJ,EAAA,EAAOK,SAAR,CAAiBC,GAAG,2B,oFC2CPC,EA/CA,WAEb,IAAMC,EAASC,IAAMC,SAErB,SAASC,IACPC,UAAUC,aACR,CAAEC,MAAO,KACT,SAAAC,GAAM,OAAIP,EAAOQ,QAAQC,UAAYF,KACrC,SAAAG,GAAG,OAAIC,QAAQC,MAAMF,MA+BvB,OA5BFG,qBAAU,WAERC,QAAQC,IAAI,CACVC,IAAaC,iBAAiBC,YAAY,WAC1CF,IAAaG,kBAAkBD,YAAY,WAC3CF,IAAaI,mBAAmBF,YAAY,WAC5CF,IAAaK,kBAAkBH,YAAY,aAC1CI,KAAKnB,GAERH,EAAOQ,QAAQe,iBAAiB,QAAQ,WACtC,IAAMC,EAASR,IAA8BhB,EAAOQ,SACpDiB,SAASC,KAAKC,OAAOH,GACrB,IAAMI,EAAc,CAAEC,MAAO7B,EAAOQ,QAAQqB,MAAOC,OAAQ9B,EAAOQ,QAAQsB,QAC1Ed,IAAwBQ,EAAQI,GAChCG,YAAW,sBAAC,8BAAAC,EAAA,sEACehB,IAAuBhB,EAAOQ,QAAS,IAAIQ,KAAmCiB,oBAAoBC,sBADjH,OACJC,EADI,OAEJC,EAAoBpB,IAAsBmB,EAAYP,GAC5DjB,QAAQ0B,IAAIF,GACZX,EAAOc,WAAW,MAAMC,UAAU,EAAG,EAAGf,EAAOK,MAAOL,EAAOM,QAE7Dd,IAAawB,kBAAkBhB,EAAQY,GAN7B,2CAQT,UAGJ,IAIQ,uBAAOK,IAAKzC,EAAQ6B,MAAM,MAAMC,OAAO,MAAMY,UAAQ,EAACC,OAAK,KCUzDC,EA/CG,WAAO,IAAD,EAEEC,oBAAS,GAFX,mBAEfC,EAFe,KAETC,EAFS,OAGIF,mBAAS,IAHb,mBAGRG,GAHQ,WAMpB,OACJ,qCACA,cAAC,EAAD,IACA,cAACC,EAAA,EAAD,CAAOH,KAAMA,EAAb,SACQ,eAACG,EAAA,EAAMC,OAAP,WACN,cAACD,EAAA,EAAME,OAAP,UACE,cAACF,EAAA,EAAMG,MAAP,yCAGF,eAACH,EAAA,EAAMI,KAAP,WACA,6EAGA,cAACC,EAAA,EAAD,CAAOC,YAAY,QAAQC,SAAU,SAAAC,GAAC,OAAIT,EAASS,EAAEC,OAAOC,aAK1D,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMd,GAAQ,IAA/B,8BAKJ,qBAAKe,UAAU,SAAf,SACI,cAAC,EAAD,MAIK,qBAAKA,UAAU,QAAf,SACH,cAAC,IAAD,CAAaC,SAAUjB,EACrBkB,IAAI,uE,eC9BGC,MAVf,WACE,OACE,mCACQ,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWxB,SCGhCyB,G,OAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBjD,MAAK,YAAkD,IAA/CkD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtD,SAASuD,eAAe,SAM1BX,K","file":"static/js/main.9df48ee1.chunk.js","sourcesContent":["import React from 'react'\nimport Navbar from 'react-bootstrap/Navbar'\n\nconst CoinsNavbar = () => {\nreturn(\n\n<>\n<Navbar bg=\"light\" expand=\"lg\">\n  <Navbar.Brand href=\"#home\">COINs Personality Prediction</Navbar.Brand>\n\n  <Navbar.Collapse id=\"basic-navbar-nav\">\n\n  </Navbar.Collapse>\n</Navbar>\n</>\n\n)\n}\nexport default CoinsNavbar;\n\n","\nimport React, { useEffect, useState } from 'react';\nimport * as faceapi from 'face-api.js';\n\n\n\nconst Camera = () => {\n\n  const camera = React.useRef();\n  \n  function startVideo() {\n    navigator.getUserMedia(\n      { video: {} },\n      stream => camera.current.srcObject = stream,\n      err => console.error(err)\n    )\n  }\n  useEffect(() => {\n    \n    Promise.all([\n      faceapi.nets.tinyFaceDetector.loadFromUri('/models'),\n      faceapi.nets.faceLandmark68Net.loadFromUri('/models'),\n      faceapi.nets.faceRecognitionNet.loadFromUri('/models'),\n      faceapi.nets.faceExpressionNet.loadFromUri('/models')\n    ]).then(startVideo)\n\n    camera.current.addEventListener('play', () => {\n      const canvas = faceapi.createCanvasFromMedia(camera.current)\n      document.body.append(canvas)\n      const displaySize = { width: camera.current.width, height: camera.current.height }\n      faceapi.matchDimensions(canvas, displaySize)\n      setInterval(async () => {\n        const detections = await faceapi.detectAllFaces(camera.current, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceExpressions()\n        const resizedDetections = faceapi.resizeResults(detections, displaySize)\n        console.log(detections);\n        canvas.getContext('2d').clearRect(0, 0, canvas.width, canvas.height)\n        // faceapi.draw.drawDetections(canvas, resizedDetections)\n        faceapi.draw.drawFaceLandmarks(canvas, resizedDetections)\n        // faceapi.draw.drawFaceExpressions(canvas, resizedDetections)\n      }, 100)\n    })\n\n  }, [])\n\n\n    return(\n             <video ref={camera} width=\"180\" height=\"140\" autoPlay muted></video>\n        \n\n    )\n} \n\n\nexport default Camera;","import React, { useState }  from 'react';\nimport CoinsNavbar from './CoinsNavbar';\nimport ReactPlayer from \"react-player\"\nimport './StartPage.css';\nimport Modal from 'react-bootstrap/Modal'\nimport { Button} from 'react-bootstrap';\nimport { Input} from 'semantic-ui-react';\nimport Camera from './Camera';\n\nconst StartPage = () => {\n\n  const [show, setShow] = useState(true);\n  const [email, setEmail] = useState(\"\")\n\n\n    return(\n<>\n<CoinsNavbar/>\n<Modal show={show}> \n        <Modal.Dialog>\n  <Modal.Header>\n    <Modal.Title>Happymeter Email Address</Modal.Title>\n  </Modal.Header>\n\n  <Modal.Body>\n  <p>Please put in your Happymeter Email address:</p>\n\n  \n  <Input placeholder=\"Email\" onChange={e => setEmail(e.target.value)}  />\n\n\n  </Modal.Body>\n\n    <Button onClick={() => setShow(false) }>Start Video</Button>\n\n</Modal.Dialog>\n</Modal>\n\n<div className=\"camera\">\n    <Camera/>\n    </div>\n\n\n         <div className=\"video\">\n      <ReactPlayer playing={!show}\n        url=\"https://www.youtube.com/watch?v=Yx5vc5gTLO0&feature=youtu.be\"\n      />\n    </div>\n\n  \n\n  </>\n\n    )\n}\n\nexport default StartPage;\n","import './App.css';\nimport StartPage from './StartPage';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\n\nfunction App() {\n  return (\n    <>\n            <Router>\n              <Route path='/' exact component={StartPage}/>\n            </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}